{"version":3,"sources":["services/orderService.js","services/vaccinationService.js","App.js","index.js"],"names":["dateAndTime","axios","get","then","response","data","App","useState","date","setDate","time","setTime","Date","setDateAndTime","amountOfVaccinationsDone","setAmountOfVaccinationsDone","amountOfVaccines","setAmountOfVaccines","useEffect","vaccinationService","count","orderService","totalNumberOfVaccines","id","toString","renderIfDataIsAvailable","onSubmit","event","preventDefault","submittedDate","target","value","submittedTime","concat","htmlFor","type","name","onChange","required","step","ReactDOM","render","document","getElementById"],"mappings":"+NAQe,EALa,SAAEA,GAE7B,OADgBC,IAAMC,IAAN,UAHD,cAGC,6BAA0CF,IAC3CG,MAAM,SAAAC,GAAQ,OAAIA,EAASC,SCG5B,EALqB,SAAEL,GAErC,OADgBC,IAAMC,IAAN,UAHD,oBAGC,qCAAkDF,IACnDG,MAAM,SAAAC,GAAQ,OAAIA,EAASC,S,OC6E5BC,EA9EH,WACX,MAA0BC,mBAAU,IAApC,mBAAQC,EAAR,KAAcC,EAAd,KACA,EAA0BF,mBAAU,IAApC,mBAAQG,EAAR,KAAcC,EAAd,KACA,EAAwCJ,mBAAU,IAAIK,MAAtD,mBAAQZ,EAAR,KAAqBa,EAArB,KACA,EAAkEN,mBAAU,GAA5E,mBAAQO,EAAR,KAAkCC,EAAlC,KACA,EAAkDR,mBAAU,GAA5D,mBAAQS,EAAR,KAA0BC,EAA1B,KAsBAC,qBAAW,WACU,KAAhBlB,IACHmB,EAC+BnB,GAC7BG,MAAM,SAAAC,GACNW,EAA6BX,EAAS,GAAGgB,UAE3CC,EACuBrB,GACrBG,MAAM,SAAAC,GACNa,EAAqBb,EAAS,GAAGkB,6BAGlC,CAAEtB,IAkBL,OACC,sBAAKuB,GAAG,eAAR,UACC,qEACA,iDACA,4BAAG,+BAAQvB,EAAYwB,eApBO,WAC/B,GAAwC,qBAA7BV,GACmB,IAA7BA,GAC4B,qBAArBE,GACc,IAArBA,EACA,OACC,qBAAKO,GAAG,qBAAR,SACC,gCACC,8DAAgC,+BAAQT,OACxC,qDAAuB,+BAAQE,YAYhCS,GACF,0EACA,sBAAMF,GAAG,qBAAqBG,SA1DH,SAAEC,GAC9BA,EAAMC,iBAEN,IAAMC,EAAgBF,EAAMG,OAAO,GAAGC,MAChCC,EAAgBL,EAAMG,OAAO,GAAGC,MACtClB,EAAgBgB,EACdI,OAAQ,KACRA,OAAQD,GACRC,OAAQ,OAkDT,SACC,sBAAKV,GAAG,0BAAR,UACC,uBAAOW,QAAQ,aAAf,yBAA+C,uBAC/C,uBAAOC,KAAK,OAAOZ,GAAG,aAAaa,KAAK,aAAaL,MAAQvB,EAAO6B,SAjD/C,SAAEV,GAC1BlB,EAASkB,EAAMG,OAAOC,QAgD+EO,UAAQ,IAAS,uBACnH,uBAAOJ,QAAQ,aAAf,yBAA+C,uBAC/C,uBAAOC,KAAK,OAAOI,KAAK,IAAIhB,GAAG,aAAaa,KAAK,aAAaL,MAAQrB,EAAO2B,SA/CxD,SAAEV,GAC1BhB,EAASgB,EAAMG,OAAOC,QA8CwFO,UAAQ,IAAS,uBAC5H,wBAAQH,KAAK,SAAb,2BCvELK,IAASC,OAAQ,cAAC,EAAD,IAASC,SAASC,eAAgB,W","file":"static/js/main.64933a30.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/orders'\n\nconst getAmountOfVaccines = ( dateAndTime ) => {\n\tconst request = axios.get( `${baseUrl}/amountOfVaccines/${dateAndTime}` )\n\treturn request.then( response => response.data )\n}\n\nexport default {\n\tgetAmountOfVaccines\n}","import axios from 'axios'\nconst baseUrl = '/api/vaccinations'\n\nconst getAmountOfVaccinationsDone = ( dateAndTime ) => {\n\tconst request = axios.get( `${baseUrl}/amountOfVaccinationsDone/${dateAndTime}` )\n\treturn request.then( response => response.data )\n}\n\nexport default {\n\tgetAmountOfVaccinationsDone\n}","import React, { useState, useEffect } from 'react'\nimport orderService from './services/orderService'\nimport vaccinationService from './services/vaccinationService'\n\nconst App = () => {\n\tconst [ date, setDate ] = useState( '' )\n\tconst [ time, setTime ] = useState( '' )\n\tconst [ dateAndTime, setDateAndTime ] = useState( new Date() )\n\tconst [ amountOfVaccinationsDone, setAmountOfVaccinationsDone ] = useState( 0 )\n\tconst [ amountOfVaccines, setAmountOfVaccines ] = useState( 0 )\n\n\tconst handleDateTimeSubmit = ( event ) => {\n\t\tevent.preventDefault()\n\n\t\tconst submittedDate = event.target[0].value\n\t\tconst submittedTime = event.target[1].value\n\t\tsetDateAndTime( submittedDate\n\t\t\t.concat( 'T' )\n\t\t\t.concat( submittedTime )\n\t\t\t.concat( 'Z' ) \n\t\t)\n\t}\n\n\tconst handleDateChange = ( event ) => {\n\t\tsetDate( event.target.value )\n\t}\n\n\tconst handleTimeChange = ( event ) => {\n\t\tsetTime( event.target.value )\n\t}\n\n\tuseEffect( () => {\n\t\tif( dateAndTime !== '' ) {\n\t\t\tvaccinationService\n\t\t\t\t.getAmountOfVaccinationsDone( dateAndTime )\n\t\t\t\t.then( response => {\n\t\t\t\t\tsetAmountOfVaccinationsDone( response[0].count )\n\t\t\t\t} )\n\t\t\torderService\n\t\t\t\t.getAmountOfVaccines( dateAndTime )\n\t\t\t\t.then( response => {\n\t\t\t\t\tsetAmountOfVaccines( response[0].totalNumberOfVaccines )\n\t\t\t\t} )\n\t\t}\n\t}, [ dateAndTime ] )\n\n\tconst renderIfDataIsAvailable = () => {\n\t\tif( typeof amountOfVaccinationsDone !== 'undefined' && \n\t\t\tamountOfVaccinationsDone !== 0 &&\n\t\t\ttypeof amountOfVaccines !== 'undefined' &&\n\t\t\tamountOfVaccines !== 0 ) {\n\t\t\treturn (\n\t\t\t\t<div id='vaccineInformation'>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p>Amount of vaccinations done: <span>{ amountOfVaccinationsDone }</span></p>\n\t\t\t\t\t\t<p>Amount of vaccines: <span>{ amountOfVaccines }</span></p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\t}\n\n\treturn (\n\t\t<div id='appContainer'>\n\t\t\t<h1>THL vaccine orders and vaccinations</h1>\n\t\t\t<h2>Up to this date</h2>\n\t\t\t<p><span>{ dateAndTime.toString() }</span></p>\n\t\t\t{ renderIfDataIsAvailable() }\n\t\t\t<h2>Filter results by entering date and time</h2>\n\t\t\t<form id='dateTimePickerForm' onSubmit={ handleDateTimeSubmit }>\n\t\t\t\t<div id='dateTimePickerContainer'>\n\t\t\t\t\t<label htmlFor='datePicker'>Choose date</label><br></br>\n\t\t\t\t\t<input type='date' id='datePicker' name='datePicker' value={ date } onChange={ handleDateChange } required></input><br></br>\n\t\t\t\t\t<label htmlFor='timePicker'>Choose time</label><br></br>\n\t\t\t\t\t<input type='time' step='1' id='timePicker' name='timePicker' value={ time } onChange={ handleTimeChange } required></input><br></br>\n\t\t\t\t\t<button type='submit'>Send</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t)\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render( <App />, document.getElementById( 'root' ) )\n"],"sourceRoot":""}