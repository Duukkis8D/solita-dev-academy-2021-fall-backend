{"version":3,"sources":["components/BasicStatistics.js","components/StatisticsBasedOnUserInput.js","components/Filter.js","services/orderService.js","services/vaccinationService.js","img/time_machine.jpg","App.js","index.js"],"names":["BasicStatistics","dateOfFirstOrder","dateOfLatestOrder","dateOfFirstVaccination","dateOfLatestVaccination","id","StatisticsBasedOnUserInput","amountOfOrders","amountOfVaccines","amountOfVaccinationsDone","vaccinesLeftToUse","role","Filter","handleDateTimeSubmit","date","handleDateChange","time","handleTimeChange","minDateAndTime","maxDateAndTime","formatDateAndTimeObject","dateAndTimeObject","getUTCFullYear","getUTCMonth","slice","getUTCDate","onSubmit","htmlFor","type","name","value","onChange","required","min","max","step","baseUrl","axios","get","then","response","data","dateAndTime","App","useState","setDate","setTime","Date","setDateAndTime","formatServerResponse","responseObjectKey","Object","keys","getUTCHours","getUTCMinutes","getUTCSeconds","formatDateAndTimeString","dateAndTimeString","setDateOfFirstOrder","setDateOfLatestOrder","setDateOfFirstVaccination","setDateOfLatestVaccination","useEffect","orderService","vaccinationService","setMinDateAndTime","setMaxDateAndTime","setAmountOfOrders","setAmountOfVaccinationsDone","setAmountOfVaccines","setVaccinesLeftToUse","src","timeMachineImg","alt","width","event","preventDefault","submittedDate","target","submittedTime","concat","href","ReactDOM","render","document","getElementById"],"mappings":"2OA2BeA,EAzBS,SAAC,GAIQ,IAHhCC,EAG+B,EAH/BA,iBACAC,EAE+B,EAF/BA,kBACAC,EAC+B,EAD/BA,uBACAC,EAA+B,EAA/BA,wBAEA,MAAgC,qBAArBH,GACW,KAArBA,GAC6B,qBAAtBC,GACe,KAAtBA,GACkC,qBAA3BC,GACoB,KAA3BA,GACmC,qBAA5BC,GACqB,KAA5BA,EAEC,sBAAKC,GAAG,kBAAR,UACC,8DAAgC,+BAAQJ,OACxC,+DAAiC,+BAAQC,OACzC,4DAA8B,+BAAQC,OACtC,6DAA+B,+BAAQC,UAG5B,qBAAKC,GAAG,kBAAR,SAA0B,yDCE1BC,EAxBoB,SAAC,GAIT,IAH1BC,EAGyB,EAHzBA,eACAC,EAEyB,EAFzBA,iBACAC,EACyB,EADzBA,yBACAC,EAAyB,EAAzBA,kBAEA,MAA8B,qBAAnBH,GACS,KAAnBA,GACoC,qBAA7BE,GACsB,KAA7BA,GAC4B,qBAArBD,GACc,KAArBA,EAEC,sBAAKH,GAAG,6BAAR,UACC,2DAA6B,+BAAQE,OACrC,qDAAuB,+BAAQC,OAC/B,8DAAgC,+BAAQC,OACxC,iEAAmC,+BAAQC,IAC1C,uBAAML,GAAG,iBAAT,8CAA2D,sBAAMM,KAAK,MAAM,aAAW,cAA5B,gCAA3D,aAGU,qBAAKN,GAAG,6BAAR,SAAqC,yDCiBrCO,EAtCA,SAAC,GAOQ,IANvBC,EAMsB,EANtBA,qBACAC,EAKsB,EALtBA,KACAC,EAIsB,EAJtBA,iBACAC,EAGsB,EAHtBA,KACAC,EAEsB,EAFtBA,iBACAC,EACsB,EADtBA,eACAC,EAAsB,EAAtBA,eAEMC,EAA0B,SAAEC,GACjC,OACCA,EAAkBC,iBACjB,KAAQ,KAAQD,EAAkBE,cAAgB,IAAMC,OAAQ,GAChE,KAAQ,IAAMH,EAAkBI,cAAeD,OAAQ,IAI1D,MAA8B,qBAAnBN,GACS,KAAnBA,GAC0B,qBAAnBC,GACY,KAAnBA,EAEC,qBAAKd,GAAG,0BAAR,SACC,uBAAMA,GAAG,qBAAqBqB,SAAWb,EAAzC,UACC,uBAAOc,QAAQ,aAAf,yBAA+C,uBAC/C,uBAAOC,KAAK,OAAOvB,GAAG,aAAawB,KAAK,aAAaC,MAAQhB,EAAOiB,SAAWhB,EAAmBiB,UAAQ,EACzGC,IAAMb,EAAyBF,GAC/BgB,IAAMd,EAAyBD,KACxB,uBACR,uBAAOQ,QAAQ,aAAf,yBAA+C,uBAC/C,uBAAOC,KAAK,OAAOO,KAAK,IAAI9B,GAAG,aAAawB,KAAK,aAAaC,MAAQd,EAAOe,SAAWd,EAAmBe,UAAQ,IAAS,uBAC5H,yBAAQJ,KAAK,SAAb,kBAA2B,sBAAMjB,KAAK,MAAM,aAAW,SAA5B,kCAIjB,qBAAKN,GAAG,0BAAR,SAAkC,yD,gBCpC3C+B,EAAU,cAsBD,EApBa,WAE3B,OADgBC,IAAMC,IAAN,UAAcF,EAAd,oBACDG,MAAM,SAAAC,GAAQ,OAAIA,EAASC,SAkB5B,EAfc,WAE5B,OADgBJ,IAAMC,IAAN,UAAcF,EAAd,qBACDG,MAAM,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVW,SAAEC,GAE3B,OADgBL,IAAMC,IAAN,UAAcF,EAAd,2BAAwCM,IACzCH,MAAM,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALa,SAAEC,GAE7B,OADgBL,IAAMC,IAAN,UAAcF,EAAd,6BAA0CM,IAC3CH,MAAM,SAAAC,GAAQ,OAAIA,EAASC,SCnBrCL,EAAU,oBAiBD,EAfmB,WAEjC,OADgBC,IAAMC,IAAN,UAAcF,EAAd,0BACDG,MAAM,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVoB,WAElC,OADgBJ,IAAMC,IAAN,UAAcF,EAAd,2BACDG,MAAM,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALqB,SAAEC,GAErC,OADgBL,IAAMC,IAAN,UAAcF,EAAd,qCAAkDM,IACnDH,MAAM,SAAAC,GAAQ,OAAIA,EAASC,SCf5B,MAA0B,yCCuL1BE,G,MA9KH,WACX,MAA0BC,mBAAU,IAApC,mBAAQ9B,EAAR,KAAc+B,EAAd,KACA,EAA0BD,mBAAU,IAApC,mBAAQ5B,EAAR,KAAc8B,EAAd,KACA,EAAwCF,mBAAU,IAAIG,MAAtD,mBAAQL,EAAR,KAAqBM,EAArB,KAuBMC,EAAuB,SAAET,GAE9B,IAAMU,EAAoBC,OAAOC,KAAMZ,EAAS,IAAK,GACrD,OAAOA,EAAS,GAAGU,IAGd9B,EAA0B,SAAEC,GACjC,OACCA,EAAkBC,iBAClB,KAAQ,KAAQD,EAAkBE,cAAgB,IAAMC,OAAQ,GAChE,KAAQ,IAAMH,EAAkBI,cAAeD,OAAQ,GACvD,KAAQ,IAAMH,EAAkBgC,eAAgB7B,OAAQ,GACxD,KAAQ,IAAMH,EAAkBiC,iBAAkB9B,OAAQ,GAC1D,KAAQ,IAAMH,EAAkBkC,iBAAkB/B,OAAQ,IAItDgC,EAA0B,SAAEC,GAEjC,OAAOrC,EAAyB,IAAI2B,KAAMU,KAG3C,EAAkDb,mBAAU,IAA5D,mBAAQ3C,EAAR,KAA0ByD,EAA1B,KACA,EAAoDd,mBAAU,IAA9D,mBAAQ1C,EAAR,KAA2ByD,EAA3B,KACA,EAA8Df,mBAAU,IAAxE,mBAAQzC,EAAR,KAAgCyD,EAAhC,KACA,EAAgEhB,mBAAU,IAA1E,mBAAQxC,EAAR,KAAiCyD,EAAjC,KACAC,qBAAW,WACVC,IAEExB,MAAM,SAAAC,GACNkB,EAAqBF,EAAyBP,EAAsBT,QAEtEuB,IAEExB,MAAM,SAAAC,GACNmB,EAAsBH,EAAyBP,EAAsBT,QAEvEwB,IAEEzB,MAAM,SAAAC,GACNoB,EAA2BJ,EAAyBP,EAAsBT,QAE5EwB,IAEEzB,MAAM,SAAAC,GACNqB,EAA4BL,EAAyBP,EAAsBT,UAE3E,IAEH,MAA8CI,mBAAU,IAAxD,mBAAQ1B,EAAR,KAAwB+C,EAAxB,KACA,EAA8CrB,mBAAU,IAAxD,mBAAQzB,EAAR,KAAwB+C,EAAxB,KACAJ,qBAAW,WACsB,qBAArB7D,GACW,KAArBA,GAC6B,qBAAtBC,GACe,KAAtBA,GACkC,qBAA3BC,GACoB,KAA3BA,GACmC,qBAA5BC,GACqB,KAA5BA,IACI,IAAI2C,KAAM9C,GAAqB,IAAI8C,KAAM5C,GAC5C8D,EAAmB,IAAIlB,KAAM9C,IAE7BgE,EAAmB,IAAIlB,KAAM5C,IAG1B,IAAI4C,KAAM7C,GAAsB,IAAI6C,KAAM3C,GAC7C8D,EAAmB,IAAInB,KAAM3C,IAE7B8D,EAAmB,IAAInB,KAAM7C,OAG7B,CACFD,EACAC,EACAC,EACAC,IAGD,MAA8CwC,mBAAU,IAAxD,oBAAQrC,GAAR,MAAwB4D,GAAxB,MACA,GAAkEvB,mBAAU,IAA5E,qBAAQnC,GAAR,MAAkC2D,GAAlC,MACA,GAAkDxB,mBAAU,IAA5D,qBAAQpC,GAAR,MAA0B6D,GAA1B,MACAP,qBAAW,WACU,KAAhBpB,IACHqB,EACqBrB,GACnBH,MAAM,SAAAC,GACN2B,GAAmBlB,EAAsBT,OAE3CwB,EAC+BtB,GAC7BH,MAAM,SAAAC,GACN4B,GAA6BnB,EAAsBT,OAErDuB,EACuBrB,GACrBH,MAAM,SAAAC,GACN6B,GAAqBpB,EAAsBT,UAG5C,CAAEE,IAEL,OAAoDE,mBAAU,IAA9D,qBAAQlC,GAAR,MAA2B4D,GAA3B,MAKA,OAJAR,qBAAW,WACVQ,GAAsB9D,GAAmBC,MACvC,CAAEA,GAA0BD,KAG9B,sBAAKH,GAAG,eAAR,UACC,sEAAwC,sBAAMM,KAAK,MAAM,aAAW,cAA5B,6BACxC,oBAAGN,GAAG,cAAN,UAAoB,sBAAMM,KAAK,MAAM,aAAW,OAA5B,0BAApB,qDAEA,cAAC,EAAD,CACCV,iBAAmBA,EACnBC,kBAAoBA,EACpBC,uBAAyBA,EACzBC,wBAA0BA,IAG3B,oBAAIC,GAAG,sBAAP,qCACA,oBAAGA,GAAG,yBAAN,UAA+B,sBAAMM,KAAK,MAAM,aAAW,WAA5B,0BAA/B,mEACA,qBAAKN,GAAG,iBAAiBkE,IAAMC,EAAiBC,IAAI,qBAAqBC,MAAM,UAE/E,cAAC,EAAD,CACC7D,qBAjJ0B,SAAE8D,GAC9BA,EAAMC,iBAEN,IAAMC,EAAgBF,EAAMG,OAAO,GAAGhD,MAChCiD,EAAgBJ,EAAMG,OAAO,GAAGhD,MACtCkB,EAAgB,IAAID,KACnB8B,EACEG,OAAQ,KACRA,OAAQD,GACRC,OAAQ,QAyITlE,KAAOA,EACPC,iBAtIsB,SAAE4D,GAC1B9B,EAAS8B,EAAMG,OAAOhD,QAsIpBd,KAAOA,EACPC,iBApIsB,SAAE0D,GAC1B7B,EAAS6B,EAAMG,OAAOhD,QAoIpBZ,eAAiBA,EACjBC,eAAiBA,IAGlB,mBAAGd,GAAG,uBAAN,+CACA,mBAAGA,GAAG,YAAN,SAAoBe,EAAyBsB,KAE7C,cAAC,EAAD,CACCnC,eAAiBA,GACjBC,iBAAmBA,GACnBC,yBAA2BA,GAC3BC,kBAAoBA,KAGrB,oBAAGL,GAAG,YAAN,mBAAwB,mBAAG4E,KAAK,gGAAR,sBAAxB,MAA+I,mBAAGA,KAAK,6DAAR,0BAA/I,SAAuO,mBAAGA,KAAK,wCAAR,8BAAvO,MAA8S,mBAAGA,KAAK,6DAAR,oCC9KjTC,IAASC,OAAQ,cAAC,EAAD,IAASC,SAASC,eAAgB,W","file":"static/js/main.d0cf378f.chunk.js","sourcesContent":["import React from 'react'\n\nconst BasicStatistics = ( {\n\tdateOfFirstOrder,\n\tdateOfLatestOrder,\n\tdateOfFirstVaccination,\n\tdateOfLatestVaccination } ) => {\n\n\tif( typeof dateOfFirstOrder !== 'undefined' &&\n\t\tdateOfFirstOrder !== '' &&\n\t\ttypeof dateOfLatestOrder !== 'undefined' && \n\t\tdateOfLatestOrder !== '' &&\n\t\ttypeof dateOfFirstVaccination !== 'undefined' &&\n\t\tdateOfFirstVaccination !== '' &&\n\t\ttypeof dateOfLatestVaccination !== 'undefined' &&\n\t\tdateOfLatestVaccination !== '' ) {\n\t\treturn (\n\t\t\t<div id='basicStatistics'>\n\t\t\t\t<p>Date of first vaccine order: <span>{ dateOfFirstOrder }</span></p>\n\t\t\t\t<p>Date of latest vaccine order: <span>{ dateOfLatestOrder }</span></p>\n\t\t\t\t<p>Date of first vaccination: <span>{ dateOfFirstVaccination }</span></p>\n\t\t\t\t<p>Date of latest vaccination: <span>{ dateOfLatestVaccination }</span></p>\n\t\t\t</div>\n\t\t)\n\t} else return <div id='basicStatistics'><p>Loading. Please wait.</p></div>\n}\n\nexport default BasicStatistics","import React from 'react'\n\nconst StatisticsBasedOnUserInput = ( {\n\tamountOfOrders,\n\tamountOfVaccines,\n\tamountOfVaccinationsDone,\n\tvaccinesLeftToUse } ) => {\n\n\tif( typeof amountOfOrders !== 'undefined' &&\n\t\tamountOfOrders !== '' &&\n\t\ttypeof amountOfVaccinationsDone !== 'undefined' && \n\t\tamountOfVaccinationsDone !== '' &&\n\t\ttypeof amountOfVaccines !== 'undefined' &&\n\t\tamountOfVaccines !== '' ) {\n\t\treturn (\n\t\t\t<div id='statisticsBasedOnUserInput'>\n\t\t\t\t<p>Amount of orders arrived: <span>{ amountOfOrders }</span></p>\n\t\t\t\t<p>Amount of vaccines: <span>{ amountOfVaccines }</span></p>\n\t\t\t\t<p>Amount of vaccinations done: <span>{ amountOfVaccinationsDone }</span></p>\n\t\t\t\t<p>Amount of vaccines left to use: <span>{ vaccinesLeftToUse }</span>\n\t\t\t\t\t<span id='expirationNote'> (Some of them might be expired! <span role='img' aria-label='wastebasket'>üóëÔ∏è</span>)</span></p>\n\t\t\t</div>\n\t\t)\n\t} else return <div id='statisticsBasedOnUserInput'><p>Loading. Please wait.</p></div>\n}\n\nexport default StatisticsBasedOnUserInput","import React from 'react'\n\nconst Filter = ( {\n\thandleDateTimeSubmit,\n\tdate,\n\thandleDateChange,\n\ttime,\n\thandleTimeChange,\n\tminDateAndTime,\n\tmaxDateAndTime } ) => {\n\n\tconst formatDateAndTimeObject = ( dateAndTimeObject ) => {\n\t\treturn (\n\t\t\tdateAndTimeObject.getUTCFullYear() +\n\t\t\t\t'-' + ( '0' + ( dateAndTimeObject.getUTCMonth() + 1 ) ).slice( -2 ) + \n\t\t\t\t'-' + ( '0' + dateAndTimeObject.getUTCDate() ).slice( -2 )\n\t\t)\n\t}\n\n\tif( typeof minDateAndTime !== 'undefined' &&\n\t\tminDateAndTime !== '' && \n\t\ttypeof maxDateAndTime !== 'undefined' &&\n\t\tmaxDateAndTime !== '' ) {\n\t\treturn (\n\t\t\t<div id='dateTimePickerContainer'>\n\t\t\t\t<form id='dateTimePickerForm' onSubmit={ handleDateTimeSubmit }>\n\t\t\t\t\t<label htmlFor='datePicker'>Choose date</label><br></br>\n\t\t\t\t\t<input type='date' id='datePicker' name='datePicker' value={ date } onChange={ handleDateChange } required\n\t\t\t\t\t\tmin={ formatDateAndTimeObject( minDateAndTime ) }\n\t\t\t\t\t\tmax={ formatDateAndTimeObject( maxDateAndTime ) }>\n\t\t\t\t\t</input><br></br>\n\t\t\t\t\t<label htmlFor='timePicker'>Choose time</label><br></br>\n\t\t\t\t\t<input type='time' step='1' id='timePicker' name='timePicker' value={ time } onChange={ handleTimeChange } required></input><br></br>\n\t\t\t\t\t<button type='submit'>Send <span role='img' aria-label='letter'>‚úâÔ∏è</span></button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t)\n\t} else return <div id='dateTimePickerContainer'><p>Loading. Please wait.</p></div>\n}\n\nexport default Filter","import axios from 'axios'\nconst baseUrl = '/api/orders'\n\nconst getDateOfFirstOrder = () => {\n\tconst request = axios.get( `${baseUrl}/firstOrderDate` )\n\treturn request.then( response => response.data )\n}\n\nconst getDateOfLatestOrder = () => {\n\tconst request = axios.get( `${baseUrl}/latestOrderDate` )\n\treturn request.then( response => response.data )\n}\n\nconst getAmountOfOrders = ( dateAndTime ) => {\n\tconst request = axios.get( `${baseUrl}/amountOfOrders/${dateAndTime}` )\n\treturn request.then( response => response.data )\n}\n\nconst getAmountOfVaccines = ( dateAndTime ) => {\n\tconst request = axios.get( `${baseUrl}/amountOfVaccines/${dateAndTime}` )\n\treturn request.then( response => response.data )\n}\n\nexport default {\n\tgetDateOfFirstOrder,\n\tgetDateOfLatestOrder,\n\tgetAmountOfOrders,\n\tgetAmountOfVaccines\n}","import axios from 'axios'\nconst baseUrl = '/api/vaccinations'\n\nconst getDateOfFirstVaccination = () => {\n\tconst request = axios.get( `${baseUrl}/firstVaccinationDate` )\n\treturn request.then( response => response.data )\n}\n\nconst getDateOfLatestVaccination = () => {\n\tconst request = axios.get( `${baseUrl}/latestVaccinationDate` )\n\treturn request.then( response => response.data )\n}\n\nconst getAmountOfVaccinationsDone = ( dateAndTime ) => {\n\tconst request = axios.get( `${baseUrl}/amountOfVaccinationsDone/${dateAndTime}` )\n\treturn request.then( response => response.data )\n}\n\nexport default {\n\tgetDateOfFirstVaccination,\n\tgetDateOfLatestVaccination,\n\tgetAmountOfVaccinationsDone\n}","export default __webpack_public_path__ + \"static/media/time_machine.b4c7c82f.jpg\";","import React, { useState, useEffect } from 'react'\nimport BasicStatistics from './components/BasicStatistics'\nimport StatisticsBasedOnUserInput from './components/StatisticsBasedOnUserInput'\nimport Filter from './components/Filter'\nimport orderService from './services/orderService'\nimport vaccinationService from './services/vaccinationService'\nimport timeMachineImg from './img/time_machine.jpg'\nimport './css/App.css'\n\nconst App = () => {\n\tconst [ date, setDate ] = useState( '' )\n\tconst [ time, setTime ] = useState( '' )\n\tconst [ dateAndTime, setDateAndTime ] = useState( new Date() )\n\n\tconst handleDateTimeSubmit = ( event ) => {\n\t\tevent.preventDefault()\n\n\t\tconst submittedDate = event.target[0].value\n\t\tconst submittedTime = event.target[1].value\n\t\tsetDateAndTime( new Date(\n\t\t\tsubmittedDate\n\t\t\t\t.concat( 'T' )\n\t\t\t\t.concat( submittedTime )\n\t\t\t\t.concat( 'Z' )\n\t\t) )\n\t}\n\n\tconst handleDateChange = ( event ) => {\n\t\tsetDate( event.target.value )\n\t}\n\n\tconst handleTimeChange = ( event ) => {\n\t\tsetTime( event.target.value )\n\t}\n\n\tconst formatServerResponse = ( response ) => {\n\t\t// eslint-disable-next-line no-unused-vars\n\t\tconst responseObjectKey = Object.keys( response[0] )[0]\n\t\treturn response[0][responseObjectKey]\n\t}\n\n\tconst formatDateAndTimeObject = ( dateAndTimeObject ) => {\n\t\treturn (\n\t\t\tdateAndTimeObject.getUTCFullYear() +\n\t\t\t'-' + ( '0' + ( dateAndTimeObject.getUTCMonth() + 1 ) ).slice( -2 ) + \n\t\t\t'-' + ( '0' + dateAndTimeObject.getUTCDate() ).slice( -2 ) + \n\t\t\t' ' + ( '0' + dateAndTimeObject.getUTCHours() ).slice( -2 ) +\n\t\t\t':' + ( '0' + dateAndTimeObject.getUTCMinutes() ).slice( -2 ) +\n\t\t\t':' + ( '0' + dateAndTimeObject.getUTCSeconds() ).slice( -2 )\n\t\t)\n\t}\n\n\tconst formatDateAndTimeString = ( dateAndTimeString ) => {\n\t\t//'2021-11-25T21:28:06.655Z' --> '2021-11-25 21:28:06'\n\t\treturn formatDateAndTimeObject( new Date( dateAndTimeString ) )\n\t}\n\n\tconst [ dateOfFirstOrder, setDateOfFirstOrder ] = useState( '' )\n\tconst [ dateOfLatestOrder, setDateOfLatestOrder ] = useState( '' )\n\tconst [ dateOfFirstVaccination, setDateOfFirstVaccination ] = useState( '' )\n\tconst [ dateOfLatestVaccination, setDateOfLatestVaccination ] = useState( '' )\n\tuseEffect( () => {\n\t\torderService\n\t\t\t.getDateOfFirstOrder()\n\t\t\t.then( response => {\n\t\t\t\tsetDateOfFirstOrder( formatDateAndTimeString( formatServerResponse( response ) ) )\n\t\t\t} )\n\t\torderService\n\t\t\t.getDateOfLatestOrder()\n\t\t\t.then( response => {\n\t\t\t\tsetDateOfLatestOrder( formatDateAndTimeString( formatServerResponse( response ) ) )\n\t\t\t} )\n\t\tvaccinationService\n\t\t\t.getDateOfFirstVaccination()\n\t\t\t.then( response => {\n\t\t\t\tsetDateOfFirstVaccination( formatDateAndTimeString( formatServerResponse( response ) ) )\n\t\t\t} )\n\t\tvaccinationService\n\t\t\t.getDateOfLatestVaccination()\n\t\t\t.then( response => {\n\t\t\t\tsetDateOfLatestVaccination( formatDateAndTimeString( formatServerResponse( response ) ) )\n\t\t\t} )\n\t}, [] )\n\n\tconst [ minDateAndTime, setMinDateAndTime ] = useState( '' )\n\tconst [ maxDateAndTime, setMaxDateAndTime ] = useState( '' )\n\tuseEffect( () => {\n\t\tif( typeof dateOfFirstOrder !== 'undefined' &&\n\t\t\tdateOfFirstOrder !== '' &&\n\t\t\ttypeof dateOfLatestOrder !== 'undefined' &&\n\t\t\tdateOfLatestOrder !== '' &&\n\t\t\ttypeof dateOfFirstVaccination !== 'undefined' &&\n\t\t\tdateOfFirstVaccination !== '' &&\n\t\t\ttypeof dateOfLatestVaccination !== 'undefined' &&\n\t\t\tdateOfLatestVaccination !== '' ) {\n\t\t\tif( new Date( dateOfFirstOrder ) < new Date( dateOfFirstVaccination ) ) {\n\t\t\t\tsetMinDateAndTime( new Date( dateOfFirstOrder ) )\n\t\t\t} else {\n\t\t\t\tsetMinDateAndTime( new Date( dateOfFirstVaccination ) )\n\t\t\t}\n\n\t\t\tif( new Date( dateOfLatestOrder ) < new Date( dateOfLatestVaccination ) ) {\n\t\t\t\tsetMaxDateAndTime( new Date( dateOfLatestVaccination ) )\n\t\t\t} else {\n\t\t\t\tsetMaxDateAndTime( new Date( dateOfLatestOrder ) )\n\t\t\t}\n\t\t}\n\t}, [ \n\t\tdateOfFirstOrder,\n\t\tdateOfLatestOrder,\n\t\tdateOfFirstVaccination,\n\t\tdateOfLatestVaccination \n\t] )\n\n\tconst [ amountOfOrders, setAmountOfOrders ] = useState( '' )\n\tconst [ amountOfVaccinationsDone, setAmountOfVaccinationsDone ] = useState( '' )\n\tconst [ amountOfVaccines, setAmountOfVaccines ] = useState( '' )\n\tuseEffect( () => {\n\t\tif( dateAndTime !== '' ) {\n\t\t\torderService\n\t\t\t\t.getAmountOfOrders( dateAndTime )\n\t\t\t\t.then( response => {\n\t\t\t\t\tsetAmountOfOrders( formatServerResponse( response ) )\n\t\t\t\t} )\n\t\t\tvaccinationService\n\t\t\t\t.getAmountOfVaccinationsDone( dateAndTime )\n\t\t\t\t.then( response => {\n\t\t\t\t\tsetAmountOfVaccinationsDone( formatServerResponse( response ) )\n\t\t\t\t} )\n\t\t\torderService\n\t\t\t\t.getAmountOfVaccines( dateAndTime )\n\t\t\t\t.then( response => {\n\t\t\t\t\tsetAmountOfVaccines( formatServerResponse( response ) )\n\t\t\t\t} )\n\t\t}\n\t}, [ dateAndTime ] )\n\n\tconst [ vaccinesLeftToUse, setVaccinesLeftToUse ] = useState( '' )\n\tuseEffect( () => {\n\t\tsetVaccinesLeftToUse( amountOfVaccines - amountOfVaccinationsDone )\n\t}, [ amountOfVaccinationsDone, amountOfVaccines ] )\n\n\treturn (\n\t\t<div id='appContainer'>\n\t\t\t<h1>THL vaccine orders and vaccinations <span role='img' aria-label='vaccination'>üíâ</span></h1>\n\t\t\t<p id='allDatesUTC'><span role='img' aria-label='info'>‚ÑπÔ∏è</span> All dates are UTC (Coordinated Universal Time)</p>\n\n\t\t\t<BasicStatistics\n\t\t\t\tdateOfFirstOrder={ dateOfFirstOrder }\n\t\t\t\tdateOfLatestOrder={ dateOfLatestOrder }\n\t\t\t\tdateOfFirstVaccination={ dateOfFirstVaccination }\n\t\t\t\tdateOfLatestVaccination={ dateOfLatestVaccination }>\n\t\t\t</BasicStatistics>\n\n\t\t\t<h2 id='timeMachineHeadline'>Go back in time section</h2>\n\t\t\t<p id='timeMachineDescription'><span role='img' aria-label='calendar'>üìÖ</span> Give a date and time to this time machine to see the history</p>\n\t\t\t<img id='timeMachineImg' src={ timeMachineImg } alt='funny time machine' width='245px' />\n\n\t\t\t<Filter\n\t\t\t\thandleDateTimeSubmit={ handleDateTimeSubmit }\n\t\t\t\tdate={ date }\n\t\t\t\thandleDateChange={ handleDateChange }\n\t\t\t\ttime={ time }\n\t\t\t\thandleTimeChange={ handleTimeChange }\n\t\t\t\tminDateAndTime={ minDateAndTime }\n\t\t\t\tmaxDateAndTime={ maxDateAndTime }>\n\t\t\t</Filter>\n\n\t\t\t<p id='givenDateDescription'>Data based on the following date:</p>\n\t\t\t<p id='givenDate'>{ formatDateAndTimeObject( dateAndTime ) }</p>\n\n\t\t\t<StatisticsBasedOnUserInput\n\t\t\t\tamountOfOrders={ amountOfOrders }\n\t\t\t\tamountOfVaccines={ amountOfVaccines }\n\t\t\t\tamountOfVaccinationsDone={ amountOfVaccinationsDone }\n\t\t\t\tvaccinesLeftToUse={ vaccinesLeftToUse }>\n\t\t\t</StatisticsBasedOnUserInput>\n\n\t\t\t<p id='photoInfo'>Photo <a href=\"https://www.dreamstime.com/royalty-free-stock-image-time-machine-humour-concept-image17334246\">17334246</a> / <a href=\"https://www.dreamstime.com/photos-images/time-machine.html\">Time Machine</a> ¬© <a href=\"https://www.dreamstime.com/vilax_info\">Aleksandr Volkov</a> | <a href=\"https://www.dreamstime.com/photos-images/time-machine.html\">Dreamstime.com</a></p>\n\t\t</div>\n\t)\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render( <App />, document.getElementById( 'root' ) )\n"],"sourceRoot":""}