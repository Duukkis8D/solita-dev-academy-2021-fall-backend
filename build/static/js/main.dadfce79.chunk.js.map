{"version":3,"sources":["components/BasicStatistics.js","components/StatisticsBasedOnUserInput.js","components/Filter.js","services/orderService.js","services/vaccinationService.js","img/time_machine.jpg","App.js","index.js"],"names":["BasicStatistics","dateOfFirstOrder","dateOfLatestOrder","dateOfFirstVaccination","dateOfLatestVaccination","id","StatisticsBasedOnUserInput","amountOfOrders","amountOfVaccines","amountOfVaccinationsDone","vaccinesLeftToUse","Filter","handleDateTimeSubmit","date","handleDateChange","time","handleTimeChange","onSubmit","htmlFor","type","name","value","onChange","required","step","baseUrl","axios","get","then","response","data","dateAndTime","App","useState","setDate","setTime","Date","setDateAndTime","formatServerResponse","responseObjectKey","Object","keys","formatDateAndTimeObject","dateAndTimeObject","console","log","getUTCFullYear","getUTCMonth","slice","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","formatDateAndTimeString","dateAndTimeString","setDateOfFirstOrder","setDateOfLatestOrder","setDateOfFirstVaccination","setDateOfLatestVaccination","useEffect","orderService","vaccinationService","setAmountOfOrders","setAmountOfVaccinationsDone","setAmountOfVaccines","setVaccinesLeftToUse","src","timeMachineImg","alt","width","event","preventDefault","target","submittedDate","submittedTime","concat","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dadfce79.chunk.js","sourcesContent":["import React from 'react'\n\nconst BasicStatistics = ( {\n\tdateOfFirstOrder,\n\tdateOfLatestOrder,\n\tdateOfFirstVaccination,\n\tdateOfLatestVaccination } ) => {\n\n\tif( typeof dateOfFirstOrder !== 'undefined' &&\n\t\tdateOfFirstOrder !== '' &&\n\t\ttypeof dateOfLatestOrder !== 'undefined' && \n\t\tdateOfLatestOrder !== '' &&\n\t\ttypeof dateOfFirstVaccination !== 'undefined' &&\n\t\tdateOfFirstVaccination !== '' &&\n\t\ttypeof dateOfLatestVaccination !== 'undefined' &&\n\t\tdateOfLatestVaccination !== '' ) {\n\t\treturn (\n\t\t\t<div id='basicStatistics'>\n\t\t\t\t<p>Date of first vaccine order: <span>{ dateOfFirstOrder }</span></p>\n\t\t\t\t<p>Date of latest vaccine order: <span>{ dateOfLatestOrder }</span></p>\n\t\t\t\t<p>Date of first vaccination: <span>{ dateOfFirstVaccination }</span></p>\n\t\t\t\t<p>Date of latest vaccination: <span>{ dateOfLatestVaccination }</span></p>\n\t\t\t</div>\n\t\t)\n\t} else return <div id='basicStatistics'><p>Loading. Please wait.</p></div>\n}\n\nexport default BasicStatistics","import React from 'react'\n\nconst StatisticsBasedOnUserInput = ( {\n\tamountOfOrders,\n\tamountOfVaccines,\n\tamountOfVaccinationsDone,\n\tvaccinesLeftToUse } ) => {\n\n\tif( typeof amountOfOrders !== 'undefined' &&\n\t\tamountOfOrders !== 0 &&\n\t\ttypeof amountOfVaccinationsDone !== 'undefined' && \n\t\tamountOfVaccinationsDone !== 0 &&\n\t\ttypeof amountOfVaccines !== 'undefined' &&\n\t\tamountOfVaccines !== 0 ) {\n\t\treturn (\n\t\t\t<div id='statisticsBasedOnUserInput'>\n\t\t\t\t<p>Amount of orders arrived: <span>{ amountOfOrders }</span></p>\n\t\t\t\t<p>Amount of vaccines: <span>{ amountOfVaccines }</span></p>\n\t\t\t\t<p>Amount of vaccinations done: <span>{ amountOfVaccinationsDone }</span></p>\n\t\t\t\t<p>Amount of vaccines left to use: <span>{ vaccinesLeftToUse }</span> (Some of them might be expired!)</p>\n\t\t\t</div>\n\t\t)\n\t} else return <div id='statisticsBasedOnUserInput'><p>Loading. Please wait.</p></div>\n}\n\nexport default StatisticsBasedOnUserInput","import React from 'react'\n\nconst Filter = ( {\n\thandleDateTimeSubmit,\n\tdate,\n\thandleDateChange,\n\ttime,\n\thandleTimeChange } ) => {\n\n\treturn (\n\t\t<form id='dateTimePickerForm' onSubmit={ handleDateTimeSubmit }>\n\t\t\t<div id='dateTimePickerContainer'>\n\t\t\t\t<label htmlFor='datePicker'>Choose date</label><br></br>\n\t\t\t\t<input type='date' id='datePicker' name='datePicker' value={ date } onChange={ handleDateChange } required></input><br></br>\n\t\t\t\t<label htmlFor='timePicker'>Choose time</label><br></br>\n\t\t\t\t<input type='time' step='1' id='timePicker' name='timePicker' value={ time } onChange={ handleTimeChange } required></input><br></br>\n\t\t\t\t<button type='submit'>Send</button>\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nexport default Filter","import axios from 'axios'\nconst baseUrl = '/api/orders'\n\nconst getDateOfFirstOrder = () => {\n\tconst request = axios.get( `${baseUrl}/firstOrderDate` )\n\treturn request.then( response => response.data )\n}\n\nconst getDateOfLatestOrder = () => {\n\tconst request = axios.get( `${baseUrl}/latestOrderDate` )\n\treturn request.then( response => response.data )\n}\n\nconst getAmountOfOrders = ( dateAndTime ) => {\n\tconst request = axios.get( `${baseUrl}/amountOfOrders/${dateAndTime}` )\n\treturn request.then( response => response.data )\n}\n\nconst getAmountOfVaccines = ( dateAndTime ) => {\n\tconst request = axios.get( `${baseUrl}/amountOfVaccines/${dateAndTime}` )\n\treturn request.then( response => response.data )\n}\n\nexport default {\n\tgetDateOfFirstOrder,\n\tgetDateOfLatestOrder,\n\tgetAmountOfOrders,\n\tgetAmountOfVaccines\n}","import axios from 'axios'\nconst baseUrl = '/api/vaccinations'\n\nconst getDateOfFirstVaccination = () => {\n\tconst request = axios.get( `${baseUrl}/firstVaccinationDate` )\n\treturn request.then( response => response.data )\n}\n\nconst getDateOfLatestVaccination = () => {\n\tconst request = axios.get( `${baseUrl}/latestVaccinationDate` )\n\treturn request.then( response => response.data )\n}\n\nconst getAmountOfVaccinationsDone = ( dateAndTime ) => {\n\tconst request = axios.get( `${baseUrl}/amountOfVaccinationsDone/${dateAndTime}` )\n\treturn request.then( response => response.data )\n}\n\nexport default {\n\tgetDateOfFirstVaccination,\n\tgetDateOfLatestVaccination,\n\tgetAmountOfVaccinationsDone\n}","export default __webpack_public_path__ + \"static/media/time_machine.b4c7c82f.jpg\";","import React, { useState, useEffect } from 'react'\nimport BasicStatistics from './components/BasicStatistics'\nimport StatisticsBasedOnUserInput from './components/StatisticsBasedOnUserInput'\nimport Filter from './components/Filter'\nimport orderService from './services/orderService'\nimport vaccinationService from './services/vaccinationService'\nimport timeMachineImg from './img/time_machine.jpg'\nimport './css/App.css'\n\nconst App = () => {\n\tconst [ date, setDate ] = useState( '' )\n\tconst [ time, setTime ] = useState( '' )\n\tconst [ dateAndTime, setDateAndTime ] = useState( new Date() )\n\n\tconst handleDateTimeSubmit = ( event ) => {\n\t\tevent.preventDefault()\n\n\t\tconsole.log( 'date, event.target[0].value:', event.target[0].value )\n\t\tconsole.log( 'time, event.target[1].value:', event.target[1].value )\n\t\tconst submittedDate = event.target[0].value\n\t\tconst submittedTime = event.target[1].value\n\t\tsetDateAndTime( new Date(\n\t\t\tsubmittedDate\n\t\t\t\t.concat( 'T' )\n\t\t\t\t.concat( submittedTime )\n\t\t\t\t.concat( 'Z' )\n\t\t) )\n\t}\n\n\tconst handleDateChange = ( event ) => {\n\t\tsetDate( event.target.value )\n\t}\n\n\tconst handleTimeChange = ( event ) => {\n\t\tsetTime( event.target.value )\n\t}\n\n\tconst formatServerResponse = ( response ) => {\n\t\t// eslint-disable-next-line no-unused-vars\n\t\tconst responseObjectKey = Object.keys( response[0] )[0]\n\t\treturn response[0][responseObjectKey]\n\t}\n\n\tconst formatDateAndTimeObject = ( dateAndTimeObject ) => {\n\t\tconsole.log( 'dateAndTimeObject:', dateAndTimeObject )\n\t\treturn (\n\t\t\tdateAndTimeObject.getUTCFullYear() +\n\t\t\t'-' + ( '0' + ( dateAndTimeObject.getUTCMonth() + 1 ) ).slice( -2 ) + \n\t\t\t'-' + ( '0' + dateAndTimeObject.getUTCDate() ).slice( -2 ) + \n\t\t\t' ' + ( '0' + dateAndTimeObject.getUTCHours() ).slice( -2 ) +\n\t\t\t':' + ( '0' + dateAndTimeObject.getUTCMinutes() ).slice( -2 ) +\n\t\t\t':' + ( '0' + dateAndTimeObject.getUTCSeconds() ).slice( -2 )\n\t\t)\n\t}\n\n\tconst formatDateAndTimeString = ( dateAndTimeString ) => {\n\t\t//'2021-11-25T21:28:06.655Z' --> '2021-11-25 21:28:06'\n\t\treturn formatDateAndTimeObject( new Date( dateAndTimeString ) )\n\t}\n\n\tconst [ dateOfFirstOrder, setDateOfFirstOrder ] = useState( '' )\n\tconst [ dateOfLatestOrder, setDateOfLatestOrder ] = useState( '' )\n\tconst [ dateOfFirstVaccination, setDateOfFirstVaccination ] = useState( '' )\n\tconst [ dateOfLatestVaccination, setDateOfLatestVaccination ] = useState( '' )\n\tuseEffect( () => {\n\t\torderService\n\t\t\t.getDateOfFirstOrder()\n\t\t\t.then( response => {\n\t\t\t\tsetDateOfFirstOrder( formatDateAndTimeString( formatServerResponse( response ) ) )\n\t\t\t} )\n\t\torderService\n\t\t\t.getDateOfLatestOrder()\n\t\t\t.then( response => {\n\t\t\t\tsetDateOfLatestOrder( formatDateAndTimeString( formatServerResponse( response ) ) )\n\t\t\t} )\n\t\tvaccinationService\n\t\t\t.getDateOfFirstVaccination()\n\t\t\t.then( response => {\n\t\t\t\tsetDateOfFirstVaccination( formatDateAndTimeString( formatServerResponse( response ) ) )\n\t\t\t} )\n\t\tvaccinationService\n\t\t\t.getDateOfLatestVaccination()\n\t\t\t.then( response => {\n\t\t\t\tsetDateOfLatestVaccination( formatDateAndTimeString( formatServerResponse( response ) ) )\n\t\t\t} )\n\t}, [] )\n\n\tconst [ amountOfOrders, setAmountOfOrders ] = useState( 0 )\n\tconst [ amountOfVaccinationsDone, setAmountOfVaccinationsDone ] = useState( 0 )\n\tconst [ amountOfVaccines, setAmountOfVaccines ] = useState( 0 )\n\tuseEffect( () => {\n\t\tif( dateAndTime !== '' ) {\n\t\t\torderService\n\t\t\t\t.getAmountOfOrders( dateAndTime )\n\t\t\t\t.then( response => {\n\t\t\t\t\tsetAmountOfOrders( formatServerResponse( response ) )\n\t\t\t\t} )\n\t\t\tvaccinationService\n\t\t\t\t.getAmountOfVaccinationsDone( dateAndTime )\n\t\t\t\t.then( response => {\n\t\t\t\t\tsetAmountOfVaccinationsDone( formatServerResponse( response ) )\n\t\t\t\t} )\n\t\t\torderService\n\t\t\t\t.getAmountOfVaccines( dateAndTime )\n\t\t\t\t.then( response => {\n\t\t\t\t\tsetAmountOfVaccines( formatServerResponse( response ) )\n\t\t\t\t} )\n\t\t}\n\t}, [ dateAndTime ] )\n\n\tconst [ vaccinesLeftToUse, setVaccinesLeftToUse ] = useState( 0 )\n\tuseEffect( () => {\n\t\tsetVaccinesLeftToUse( amountOfVaccines - amountOfVaccinationsDone )\n\t}, [ amountOfVaccinationsDone, amountOfVaccines ] )\n\n\treturn (\n\t\t<div id='appContainer'>\n\t\t\t<h1>THL vaccine orders and vaccinations</h1>\n\t\t\t<p id='allDatesUTC'>All dates are UTC (Coordinated Universal Time) unless otherwise stated</p>\n\n\t\t\t<BasicStatistics\n\t\t\t\tdateOfFirstOrder={ dateOfFirstOrder }\n\t\t\t\tdateOfLatestOrder={ dateOfLatestOrder }\n\t\t\t\tdateOfFirstVaccination={ dateOfFirstVaccination }\n\t\t\t\tdateOfLatestVaccination={ dateOfLatestVaccination }>\n\t\t\t</BasicStatistics>\n\n\t\t\t<h2 id='givenDateHeadline'>\n\t\t\t\tUp to the following date (your local time zone) <span id='givenDate'>{ formatDateAndTimeObject( dateAndTime ) }</span>\n\t\t\t</h2>\n\n\t\t\t<StatisticsBasedOnUserInput\n\t\t\t\tamountOfOrders={ amountOfOrders }\n\t\t\t\tamountOfVaccines={ amountOfVaccines }\n\t\t\t\tamountOfVaccinationsDone={ amountOfVaccinationsDone }\n\t\t\t\tvaccinesLeftToUse={ vaccinesLeftToUse }>\n\t\t\t</StatisticsBasedOnUserInput>\n\n\t\t\t<h2 id='filterHeadline'>Filter results by using the following time machine</h2>\n\n\t\t\t<img id='timeMachineImg' src={ timeMachineImg } alt='funny time machine' width='300px' />\n\n\t\t\t<Filter\n\t\t\t\thandleDateTimeSubmit={ handleDateTimeSubmit }\n\t\t\t\tdate={ date }\n\t\t\t\thandleDateChange={ handleDateChange }\n\t\t\t\ttime={ time }\n\t\t\t\thandleTimeChange={ handleTimeChange }>\n\t\t\t</Filter>\n\n\t\t\t<p>Photo <a href=\"https://www.dreamstime.com/royalty-free-stock-image-time-machine-humour-concept-image17334246\">17334246</a> / <a href=\"https://www.dreamstime.com/photos-images/time-machine.html\">Time Machine</a> © <a href=\"https://www.dreamstime.com/vilax_info\">Aleksandr Volkov</a> | <a href=\"https://www.dreamstime.com/photos-images/time-machine.html\">Dreamstime.com</a></p>\n\t\t</div>\n\t)\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render( <App />, document.getElementById( 'root' ) )\n"],"sourceRoot":""}