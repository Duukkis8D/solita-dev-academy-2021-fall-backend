{"version":3,"sources":["services/orderService.js","services/vaccinationService.js","img/time_machine.jpg","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","dateAndTime","App","useState","date","setDate","time","setTime","Date","setDateAndTime","formatServerResponse","responseObjectKey","Object","keys","dateOfFirstOrder","setDateOfFirstOrder","dateOfLatestOrder","setDateOfLatestOrder","dateOfFirstVaccination","setDateOfFirstVaccination","dateOfLatestVaccination","setDateOfLatestVaccination","useEffect","orderService","vaccinationService","amountOfVaccinationsDone","setAmountOfVaccinationsDone","amountOfVaccines","setAmountOfVaccines","vaccinesLeftToUse","setVaccinesLeftToUse","id","toString","src","timeMachineImg","alt","width","onSubmit","event","preventDefault","submittedDate","target","value","submittedTime","concat","htmlFor","type","name","onChange","required","step","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.af052720.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/orders'\n\nconst getDateOfFirstOrder = () => {\n\tconst request = axios.get( `${baseUrl}/firstOrderDate` )\n\treturn request.then( response => response.data )\n}\n\nconst getDateOfLatestOrder = () => {\n\tconst request = axios.get( `${baseUrl}/latestOrderDate` )\n\treturn request.then( response => response.data )\n}\n\nconst getAmountOfVaccines = ( dateAndTime ) => {\n\tconst request = axios.get( `${baseUrl}/amountOfVaccines/${dateAndTime}` )\n\treturn request.then( response => response.data )\n}\n\nexport default {\n\tgetDateOfFirstOrder,\n\tgetDateOfLatestOrder,\n\tgetAmountOfVaccines\n}","import axios from 'axios'\nconst baseUrl = '/api/vaccinations'\n\nconst getDateOfFirstVaccination = () => {\n\tconst request = axios.get( `${baseUrl}/firstVaccinationDate` )\n\treturn request.then( response => response.data )\n}\n\nconst getDateOfLatestVaccination = () => {\n\tconst request = axios.get( `${baseUrl}/latestVaccinationDate` )\n\treturn request.then( response => response.data )\n}\n\nconst getAmountOfVaccinationsDone = ( dateAndTime ) => {\n\tconst request = axios.get( `${baseUrl}/amountOfVaccinationsDone/${dateAndTime}` )\n\treturn request.then( response => response.data )\n}\n\nexport default {\n\tgetDateOfFirstVaccination,\n\tgetDateOfLatestVaccination,\n\tgetAmountOfVaccinationsDone\n}","export default __webpack_public_path__ + \"static/media/time_machine.b4c7c82f.jpg\";","import React, { useState, useEffect } from 'react'\nimport orderService from './services/orderService'\nimport vaccinationService from './services/vaccinationService'\nimport timeMachineImg from './img/time_machine.jpg'\n\nconst App = () => {\n\tconst [ date, setDate ] = useState( '' )\n\tconst [ time, setTime ] = useState( '' )\n\tconst [ dateAndTime, setDateAndTime ] = useState( new Date() )\n\n\tconst handleDateTimeSubmit = ( event ) => {\n\t\tevent.preventDefault()\n\n\t\tconst submittedDate = event.target[0].value\n\t\tconst submittedTime = event.target[1].value\n\t\tsetDateAndTime( submittedDate\n\t\t\t.concat( 'T' )\n\t\t\t.concat( submittedTime )\n\t\t\t.concat( 'Z' ) \n\t\t)\n\t}\n\n\tconst handleDateChange = ( event ) => {\n\t\tsetDate( event.target.value )\n\t}\n\n\tconst handleTimeChange = ( event ) => {\n\t\tsetTime( event.target.value )\n\t}\n\n\tconst formatServerResponse = ( response ) => {\n\t\t// eslint-disable-next-line no-unused-vars\n\t\tconst responseObjectKey = Object.keys( response[0] )[0]\n\t\treturn response[0][responseObjectKey]\n\t}\n\n\tconst [ dateOfFirstOrder, setDateOfFirstOrder ] = useState( '' )\n\tconst [ dateOfLatestOrder, setDateOfLatestOrder ] = useState( '' )\n\tconst [ dateOfFirstVaccination, setDateOfFirstVaccination ] = useState( '' )\n\tconst [ dateOfLatestVaccination, setDateOfLatestVaccination ] = useState( '' )\n\tuseEffect( () => {\n\t\torderService\n\t\t\t.getDateOfFirstOrder()\n\t\t\t.then( response => {\n\t\t\t\tsetDateOfFirstOrder( formatServerResponse( response ) )\n\t\t\t} )\n\t\torderService\n\t\t\t.getDateOfLatestOrder()\n\t\t\t.then( response => {\n\t\t\t\tsetDateOfLatestOrder( formatServerResponse( response ) )\n\t\t\t} )\n\t\tvaccinationService\n\t\t\t.getDateOfFirstVaccination()\n\t\t\t.then( response => {\n\t\t\t\tsetDateOfFirstVaccination( formatServerResponse( response ) )\n\t\t\t} )\n\t\tvaccinationService\n\t\t\t.getDateOfLatestVaccination()\n\t\t\t.then( response => {\n\t\t\t\tsetDateOfLatestVaccination( formatServerResponse( response ) )\n\t\t\t} )\n\t}, [] )\n\n\tconst [ amountOfVaccinationsDone, setAmountOfVaccinationsDone ] = useState( 0 )\n\tconst [ amountOfVaccines, setAmountOfVaccines ] = useState( 0 )\n\tuseEffect( () => {\n\t\tif( dateAndTime !== '' ) {\n\t\t\tvaccinationService\n\t\t\t\t.getAmountOfVaccinationsDone( dateAndTime )\n\t\t\t\t.then( response => {\n\t\t\t\t\tsetAmountOfVaccinationsDone( formatServerResponse( response ) )\n\t\t\t\t} )\n\t\t\torderService\n\t\t\t\t.getAmountOfVaccines( dateAndTime )\n\t\t\t\t.then( response => {\n\t\t\t\t\tsetAmountOfVaccines( formatServerResponse( response ) )\n\t\t\t\t} )\n\t\t}\n\t}, [ dateAndTime ] )\n\n\tconst [ vaccinesLeftToUse, setVaccinesLeftToUse ] = useState( 0 )\n\tuseEffect( () => {\n\t\tsetVaccinesLeftToUse( amountOfVaccines - amountOfVaccinationsDone )\n\t}, [ amountOfVaccinationsDone, amountOfVaccines ] )\n\n\tconst renderBasicStatistics = () => {\n\t\tif( typeof dateOfFirstOrder !== 'undefined' &&\n\t\t\tdateOfFirstOrder !== '' &&\n\t\t\ttypeof dateOfLatestOrder !== 'undefined' && \n\t\t\tdateOfLatestOrder !== '' &&\n\t\t\ttypeof dateOfFirstVaccination !== 'undefined' &&\n\t\t\tdateOfFirstVaccination !== '' &&\n\t\t\ttypeof dateOfLatestVaccination !== 'undefined' &&\n\t\t\tdateOfLatestVaccination !== '' ) {\n\t\t\treturn (\n\t\t\t\t<div id='basicStatistics'>\n\t\t\t\t\t<p>Date of first vaccine order: <span>{ dateOfFirstOrder }</span></p>\n\t\t\t\t\t<p>Date of latest vaccine order: <span>{ dateOfLatestOrder }</span></p>\n\t\t\t\t\t<p>Date of first vaccination: <span>{ dateOfFirstVaccination }</span></p>\n\t\t\t\t\t<p>Date of latest vaccination: <span>{ dateOfLatestVaccination }</span></p>\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else return <div id='basicStatistics'><p>Loading. Please wait.</p></div>\n\t}\n\n\tconst renderStatisticsBasedOnUserInput = () => {\n\t\tif( typeof amountOfVaccinationsDone !== 'undefined' && \n\t\t\tamountOfVaccinationsDone !== 0 &&\n\t\t\ttypeof amountOfVaccines !== 'undefined' &&\n\t\t\tamountOfVaccines !== 0 ) {\n\t\t\treturn (\n\t\t\t\t<div id='vaccineInformation'>\n\t\t\t\t\t<p>Amount of vaccinations done: <span>{ amountOfVaccinationsDone }</span></p>\n\t\t\t\t\t<p>Amount of vaccines: <span>{ amountOfVaccines }</span></p>\n\t\t\t\t\t<p>Amount of vaccines left to use: <span>{ vaccinesLeftToUse }</span> (Some of them might be expired!)</p>\n\t\t\t\t</div>\n\t\t\t)\n\t\t} else return <div id='vaccineInformation'><p>Loading. Please wait.</p></div>\n\t}\n\n\treturn (\n\t\t<div id='appContainer'>\n\t\t\t<h1>THL vaccine orders and vaccinations</h1>\n\t\t\t{ renderBasicStatistics() }\n\t\t\t<h2>Up to this date</h2>\n\t\t\t<p><span>{ dateAndTime.toString() }</span></p>\n\t\t\t{ renderStatisticsBasedOnUserInput() }\n\t\t\t<h2>Filter results by using the following time machine</h2>\n\t\t\t<img src={ timeMachineImg } alt='funny time machine' width='300px' />\n\t\t\t<form id='dateTimePickerForm' onSubmit={ handleDateTimeSubmit }>\n\t\t\t\t<div id='dateTimePickerContainer'>\n\t\t\t\t\t<label htmlFor='datePicker'>Choose date</label><br></br>\n\t\t\t\t\t<input type='date' id='datePicker' name='datePicker' value={ date } onChange={ handleDateChange } required></input><br></br>\n\t\t\t\t\t<label htmlFor='timePicker'>Choose time</label><br></br>\n\t\t\t\t\t<input type='time' step='1' id='timePicker' name='timePicker' value={ time } onChange={ handleTimeChange } required></input><br></br>\n\t\t\t\t\t<button type='submit'>Send</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t<p>Photo <a href=\"https://www.dreamstime.com/royalty-free-stock-image-time-machine-humour-concept-image17334246\">17334246</a> / <a href=\"https://www.dreamstime.com/photos-images/time-machine.html\">Time Machine</a> © <a href=\"https://www.dreamstime.com/vilax_info\">Aleksandr Volkov</a> | <a href=\"https://www.dreamstime.com/photos-images/time-machine.html\">Dreamstime.com</a></p>\n\t\t</div>\n\t)\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render( <App />, document.getElementById( 'root' ) )\n"],"sourceRoot":""}